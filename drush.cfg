#!/bin/bash
#
# drush.cfg
#
# DRUSH SPECIFIC SETTINGS AND FUNCTIONS

# Aliases
alias d="drush -y"
alias du="drush -y pm-uninstall"
alias themeon="drush -y en devel_themer"
alias themeoff="drush -y dis devel_themer"

# Add my core modules to a drupal installation
function addMyMods() {
  drush dl ctools token features context views panels strongarm pathauto devel devel_themer admin_menu admin backup_migrate global_redirect
  drush en ctools token features context context_ui devel panels views views_ui strongarm backup_migrate admin admin_menu field_ui image list number overlay path taxonomy global_redirect
}

# Quick directory change for drush
function cdd() {
  if [ -z $1 ]; then
    cd `drush dd`
  elif [ -n $1 ] && [ ${1:0:1} != "@" ]; then
    cd `drush dd $1`
  elif [ -n $1 ] && [ ${1:0:1} == "@" ]; then
    cd `drush $1 dd $2`
  fi
}

# Drush enhanced development environment configuration
function dev() {
    echo -n "Running this script will alter the settings of this Drupal install for development.  Do you want to continue (y/n)? "
    read CONT

    if [ "$CONT" == "y" ]; then
        # enable Admin Menu
        drush -y en admin_menu

        # Disable admin tools
        drush -y dis admin

        # Enable Devel
        drush -y en devel

        # Disable SecurePages
        drush -y dis securepages
        drush -y dis eere_meta

        # turn off performance enhancements
        drush -y vset cache 0
        drush -y vset page_compression 0
        drush -y vset block_cache 0
        drush -y vset preprocess_css 0
        drush -y vset preprocess_js 0
        drush -y vset error_level 1
    else
        echo "Cancelling development alterations."
    fi
}

# Use Drush to download and install a module
function di () {
    MOD=$1
    drush dl $MOD
    drush en -y $MOD
    echo "Project directory includes:"
    find `drush dd $MOD` -name "*.module" -print
}

# Drush reinstallation procedure.
function drin () {
    MOD=$1
    drush -y dis $MOD
    drush -y pm-uninstall $MOD
    drush -y en $MOD
}

# Completely uninstall and remove a module
function drm() {
    MOD=$1
    echo -n "This will completely disable, uninstall and remove the module '$MOD'.  Do you want to continue (y/n)? "
    read CONT

    if [ "$CONT" == "y" ]; then
        drush -y dis $MOD
        drush -y pm-uninstall $MOD
        rm -rf `drush dd $MOD`
    fi
}

# Open a module or theme in a finder window
function dopen() {
    open `drush dd $1`
}

# Adjust site settings for IE or not IE.
function ie() {
    if [ "$1" == "on" ]; then
        drush -y vset preprocess_css 1
        drush -y vset preprocess_js 1
        echo "Site configured for IE testing."
    else
        drush -y vset preprocess_css 0
        drush -y vset preprocess_js 0
        echo "Site configured for non-IE testing."
    fi
}

# Create a new Drupal 7 site with default credentials.
function newD7() {
  SITENAME=$1

  if [ -n "$SITENAME" ]; then
    echo -n "This will install a new Drupal 7 site in '`pwd`/$SITENAME'.  Do you want to continue (y/n)? "
    read CONT

    if [ "$CONT" == "y" ]; then
      drush dl -y --drupal-project-rename=$SITENAME drupal-7
      cd $SITENAME
      drush si minimal -y --db-url=mysqli://$MYSQL_USER:$MYSQL_PASS@localhost/$SITENAME --site-name=$SITENAME
    fi
  else
    echo "Specify a site name."
  fi
}
